version: '3.8'

services:

  notify:
    container_name: notify
    restart: always
    build: ./producer_service/
    ports:
      - "8000:8000"

  admin_notifications:
    container_name: admin_notifications
    build:
      context: ./admin_notice
      dockerfile: ./Dockerfile
    volumes:
      - ./admin_notice/static_volume:/code/static/
    restart: always
    env_file:
      - .env
    ports:
      - "${DJANGO_ADMIN_NOTICE_PORT}:8000"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    container_name: notify_db
    env_file:
      - .env
    volumes:
      - ./database:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  rabbitmq1:
    image: rabbitmq:3-management
    hostname: rabbitmq1
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    volumes:
      - ./rabbitmq/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./rabbitmq/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  rabbitmq2:
    image: rabbitmq:3-management
    hostname: rabbitmq2
    depends_on:
      - rabbitmq1
    environment:
      - JOIN_CLUSTER_HOST=rabbitmq1
    volumes:
      - ./rabbitmq/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./rabbitmq/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  rabbitmq3:
    image: rabbitmq:3-management
    hostname: rabbitmq3
    depends_on:
      - rabbitmq1
    environment:
      - JOIN_CLUSTER_HOST=rabbitmq1
    volumes:
      - ./rabbitmq/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./rabbitmq/cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  haproxy:
    image: haproxy:1.7
    container_name: rabbit_queue
    volumes:
      - ./rabbitmq/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - rabbitmq1
      - rabbitmq2
      - rabbitmq3
    ports:
      - 15672:15672
      - 5672:5672

  consumer:
    build: ./rabbitmq/consumer
    restart: always
    depends_on:
      - haproxy
