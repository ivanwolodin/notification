version: '3.8'

services:

  notify:
    container_name: notify
    restart: always
    build: ./producer_service/
    ports:
      - "8000:8000"

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 15s
      timeout: 2s
      retries: 15

  admin_notifications:
    container_name: admin_notifications
    build:
      context: ./admin_notice
      dockerfile: ./Dockerfile
    volumes:
      - ./admin_notice/static_volume:/code/static/
    restart: always
    env_file:
      - .env
    ports:
      - "${DJANGO_ADMIN_NOTICE_PORT}:8000"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    container_name: notify_db
    env_file:
      - .env
    volumes:
      - ./database:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"